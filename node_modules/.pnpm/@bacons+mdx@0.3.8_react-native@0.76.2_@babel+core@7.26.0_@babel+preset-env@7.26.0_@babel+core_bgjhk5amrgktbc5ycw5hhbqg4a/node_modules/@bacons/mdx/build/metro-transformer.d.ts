import { Processor } from "unified";
export declare function createTransformer({ matchFile, matchLocalAsset, remarkPlugins, }?: {
    /**
     * @param props Metro transform props.
     * @returns true if the file should be transformed.
     * @default Function that matches if a file ends with `.mdx` or `.md`.
     */
    matchFile?: (props: {
        filename: string;
        src: string;
    }) => boolean;
    /**
     * @returns true if the src reference should be converted to a local `require`.
     * @default Function that matches strings starting with `.` or `@`.
     */
    matchLocalAsset?: (props: {
        src: string;
    }) => boolean;
    remarkPlugins?: any[];
}): {
    transform: (props: {
        filename: string;
        src: string;
    }) => Promise<{
        filename: string;
        src: string;
    }>;
    compiler: Processor<import("unified").Settings>;
};
export declare const transform: (props: {
    filename: string;
    src: string;
}) => Promise<{
    filename: string;
    src: string;
}>;
//# sourceMappingURL=metro-transformer.d.ts.map